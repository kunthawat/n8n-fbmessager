import type { EnsureTypeOptions, INode, INodeType, IRunExecutionData, IWorkflowDataProxyAdditionalKeys, IWorkflowExecuteAdditionalData, NodeParameterValueType, WorkflowExecuteMode } from 'n8n-workflow';
export declare function cleanupParameterData(inputData: NodeParameterValueType): void;
export declare const validateValueAgainstSchema: (node: INode, nodeType: INodeType, parameterValue: string | number | boolean | object | null | undefined, parameterName: string, runIndex: number, itemIndex: number) => any;
export declare function ensureType(toType: EnsureTypeOptions, parameterValue: any, parameterName: string, errorOptions?: {
    itemIndex?: number;
    runIndex?: number;
    nodeCause?: string;
}): string | number | boolean | object;
export declare function getAdditionalKeys(additionalData: IWorkflowExecuteAdditionalData, mode: WorkflowExecuteMode, runExecutionData: IRunExecutionData | null, options?: {
    secretsEnabled?: boolean;
}): IWorkflowDataProxyAdditionalKeys;
