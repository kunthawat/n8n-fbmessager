"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isStream = isStream;
exports.parseXml = parseXml;
exports.writeBlockedMessage = writeBlockedMessage;
const node_stream_1 = require("node:stream");
const xml2js_1 = require("xml2js");
const processors_1 = require("xml2js/lib/processors");
function isStream(maybeStream) {
    return maybeStream instanceof node_stream_1.Stream;
}
async function parseXml(xml) {
    return await (0, xml2js_1.parseStringPromise)(xml, {
        explicitArray: false,
        ignoreAttrs: true,
        tagNameProcessors: [processors_1.firstCharLowerCase],
        valueProcessors: [processors_1.parseNumbers, processors_1.parseBooleans],
    });
}
function writeBlockedMessage(filename) {
    return `Request to write file "${filename}" to object storage was blocked because S3 storage is not available with your current license. Please upgrade to a license that supports this feature, or set N8N_DEFAULT_BINARY_DATA_MODE to an option other than "s3".`;
}
//# sourceMappingURL=utils.js.map